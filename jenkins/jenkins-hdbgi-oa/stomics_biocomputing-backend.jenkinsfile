pipeline {
    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr: '3'))
        parallelsAlwaysFailFast()
        timestamps()
    }

    parameters {
        choice(name: 'PROJECT_VERSION', choices: ['2.4.3'], description: '项目的版本号')
        choice(name: 'PROJECT_MODULE', choices: ['jeecg-boot-module-system'], description: '要构建的模块')
        string(name: 'PROJECT_PORT', defaultValue: '9090', description: '项目端口')
        string(name: 'HOST_PORTS', defaultValue: '9090', description: '映射到宿主机的端口（多个用空格隔开）')
    }

    environment {
        J_WORKSPACE = "${WORKSPACE}"
        WEB_PROJECT="""${sh(
            returnStdout: true,
            script: 'echo -n "${WEB_PROJECT:-/data/workspace/web}"'
        )}"""
        PROJECT_FILE="${PROJECT_MODULE}-${PROJECT_VERSION}.jar"
    }

    stages {
        stage('Pull') {
            steps {
                echo '================================'
                echo 'Fetching code...'
                git branch: 'backend', credentialsId: 'gitlab-wubaohui1', url: 'ssh://git@gitlab.genomics.cn:2200/biointelligence/stereomics/stomics_biocomputing.git'
            }
        }
        stage('Build') {
            steps {
                echo '================================'
                echo 'Building...'
                sh '''
                    mvn --file "${J_WORKSPACE}/jeecg-boot/pom.xml" --projects ${PROJECT_MODULE}  --also-make clean package -Dmaven.test.skip=true
                '''
            }
        }
        stage('Deploy') {
            steps {
                echo '================================'
                echo 'Deploying and running...'
                sh '''
                    cp -f "${J_WORKSPACE}/jeecg-boot/${PROJECT_MODULE}/target/${PROJECT_FILE}" \
                        "${WEB_PROJECT}/backends/biocal/"
                    bash "${WEB_PROJECT}/sgl-java-start.sh" jeecg-system "${PROJECT_PORT}" "${HOST_PORTS}" "${WEB_PROJECT}/backends/biocal/${PROJECT_FILE}"
                '''
            }
        }
    }
}
